# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: assets
prefect-version: 3.4.2.dev5+23.g4ef9f5cf2e

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    repository: https://github.com/znicholasbrown/demo-flows.git
    branch: main

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: default
  version: null
  tags: ['ml', 'assets']
  concurrency_limit: null
  description: Flow to train ML models
  entrypoint: assets/main.py:train_models
  parameters: {}
  work_pool:
    name: nicholas-managed-staging
    work_queue_name: default
    job_variables: {}
  schedules: []
- name: default
  version: null
  tags: ['analytics', 'assets']
  concurrency_limit: null
  description: Flow to run analytics and quality checks
  entrypoint: assets/main.py:run_analytics_and_quality
  parameters: {}
  work_pool:
    name: nicholas-managed-staging
    work_queue_name: default
    job_variables: {}
  schedules: []
- name: default
  version: null
  tags: ['assets']
  concurrency_limit: null
  description: Main pipeline flow
  entrypoint: assets/main.py:run_pipeline
  parameters: {}
  work_pool:
    name: nicholas-managed-staging
    work_queue_name: default
    job_variables: {}
  schedules: []
